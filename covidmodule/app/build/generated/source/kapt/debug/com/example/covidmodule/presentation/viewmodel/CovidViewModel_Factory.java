// Generated by Dagger (https://dagger.dev).
package com.example.covidmodule.presentation.viewmodel;

import com.example.covidmodule.domain.usecase.GetStatusCovidUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CovidViewModel_Factory implements Factory<CovidViewModel> {
  private final Provider<GetStatusCovidUseCase> getStatusCovidUseCaseProvider;

  public CovidViewModel_Factory(Provider<GetStatusCovidUseCase> getStatusCovidUseCaseProvider) {
    this.getStatusCovidUseCaseProvider = getStatusCovidUseCaseProvider;
  }

  @Override
  public CovidViewModel get() {
    return newInstance(getStatusCovidUseCaseProvider.get());
  }

  public static CovidViewModel_Factory create(
      Provider<GetStatusCovidUseCase> getStatusCovidUseCaseProvider) {
    return new CovidViewModel_Factory(getStatusCovidUseCaseProvider);
  }

  public static CovidViewModel newInstance(GetStatusCovidUseCase getStatusCovidUseCase) {
    return new CovidViewModel(getStatusCovidUseCase);
  }
}
